name: Deploy

on:
  push:
    branches:
    - main

jobs:
  deploy-staging:
    name: Deploy to staging
    runs-on: ubuntu-latest
    environment: staging
    steps:
    # - name: Setup AWS SAM CLI
    #   uses: aws-actions/setup-aws-sam-cli@v1
    #   with:
    #     version: 1.18.*

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Checkout
      uses: actions/checkout@v2

    - name: Install dependencies
      working-directory: hello-world
      run: |
        npm ci

    - name: Run unit tests
      working-directory: hello-world
      run: |
        npm t

    - name: Validate
      run: |
        sam validate

    - name: Build
      run: |
        sam build

    - name: Preserve build artifact
      uses: actions/upload-artifact@v2
      with:
        name: build-artifact
        path: .aws-sam

    - name: Deploy
      run: |
        sam deploy --stack-name ${{ secrets.STACK_NAME }}

    - name: Run integration tests
      working-directory: hello-world
      env:
        AWS_SAM_STACK_NAME: ${{ secrets.STACK_NAME }}
      run: |
        npm run-script integ-test

  deploy-production:
    needs: deploy-staging
    name: Deploy to production
    runs-on: ubuntu-latest
    environment: production
    steps:
    # - name: Setup AWS SAM CLI
    #   uses: aws-actions/setup-aws-sam-cli@v1
    #   with:
    #     version: 1.18.*

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Checkout
      uses: actions/checkout@v2

    - name: Restore build artifact
      uses: actions/download-artifact@v2
      with:
        name: build-artifact

    - name: Deploy
      run: |
        sam deploy --stack-name ${{ secrets.STACK_NAME }}
